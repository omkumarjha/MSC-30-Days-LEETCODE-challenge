/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        stack<TreeNode * > st;

        while(root || !st.empty()){
            // Left mai jaane se pehle hum current node ko print karwa rahe hai .
            while(root){
                ans.push_back(root->val);
                st.push(root);
                root = root -> left;
            }
            // stack ke andar sirf wahi node hai jiske liye printing and left part jaana ho chuka hai .
            root = st.top();
            st.pop();
            root = root -> right;
        }

        return ans;
    }
};
