/*  Tree node
struct Node
{
    int data;
    Node* left, * right;
}; */

// Should return true if tree is Sum Tree, else false
class Solution
{
    public:
    // Question solved by Om just by refering few hints.
    int solve(Node * root , bool & isSum){
        if(root == NULL){ // Base case
            return 0;
        }
        
        int leftSum = solve(root->left,isSum);
        // agar hum leaf node pe hai to just uski value uper bhej do . isme hume kuch check nhi karna ya koi right ke liye call nhi marni .
        if(root->left == NULL && root->right == NULL){
            return root->data;
        }
        
        int rightSum = solve(root->right,isSum);
        
        // kyuki question mai bol rakha hai for every node x hume left sum and right sum ko root->data se compare karna hai to agar kisi eak case mai bhi equal nhi aata hai to tree sum tree nhi hogi.
        if((leftSum + rightSum) != root->data){
            isSum = false;
        }
        
        return (leftSum + rightSum + root->data);
    }
    
    bool isSumTree(Node* root){
        
        // Edge cases as given in the statement.
        if((root == NULL) || (root->left == NULL && root->right == NULL)){
            return true;
        }
        
        // initially humne tree ko sum tree assume karliya.
        bool isSum = true;
        solve(root,isSum);
        
        return isSum;
        
        
    }
};
