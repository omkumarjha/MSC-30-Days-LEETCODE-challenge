/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    /*
    Using iterative approach

    ListNode* reverseList(ListNode* head) {
        // Edge cases 
        if(head == NULL || head->next == NULL){
            return head;
        }

        ListNode * temp = NULL;
        ListNode * curr = head;
        ListNode * prev = head;

        while(curr != NULL){
            curr = curr -> next;
            prev->next = temp;
            temp = prev;
            prev = curr;
        }

        return temp;

    }
    */

    ListNode* reverseList(ListNode* head){
        // Edge cases using recursive approach 
        if(head == NULL || head->next == NULL){
            return head;
        }

        ListNode * chotaHead = reverseList(head->next);

        head->next->next = head;
        head->next = NULL;

        return chotaHead;
    }


};
