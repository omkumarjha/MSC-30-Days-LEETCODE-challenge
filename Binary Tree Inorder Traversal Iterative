/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // Code from Leetcode discussion and TC 0(n) SC 0(n)
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> ans;
        stack<TreeNode * > st;

        while(root || !st.empty()){
            // jab bhi hum left mai jaa rahe hai to while loop laga rahe hai and right mai jaane ke liye sirf right mai chale jao aur kuch nhi kyuki right jaane ke baad again LNR repeat hojayega.
            // Stack ke andar hum sirf wahi node dal rahe hai jisske liye humne left part check kar liya hai .
            while(root){
                st.push(root);
                root = root -> left;
            }
            // jab left nahi ho paya iska matlab ki stack ka top wala node hi hai jispe focus hoga to L to hochuka hai and uss node ko print karo and then right mei move kar jao.
            root = st.top();
            st.pop();
            ans.push_back(root->val);
            root = root -> right;
        }

        return ans;
    }
}; 
