class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        vector<int> ans;
        int row = matrix.size();
        int col = matrix[0].size(); 
        int totalElements = row * col;
        int count = 0;

        int startingRow = 0;
        int endingRow = row - 1;
        int startingCol = 0;
        int endingCol = col - 1;

        while(count < totalElements){
            // Print starting row
            for(int i = startingCol; count < totalElements && i <= endingCol; i++){
                ans.push_back(matrix[startingRow][i]);
                count++;
            }
            startingRow++;

            // Print ending col
            for(int i = startingRow; count < totalElements && i <= endingRow; i++){
                ans.push_back(matrix[i][endingCol]);
                count++;
            }
            endingCol--;

            // Print ending row
            for(int i = endingCol; count < totalElements && i >= startingCol; i--){
                ans.push_back(matrix[endingRow][i]);
                count++;
            }
            endingRow--;

            // Print starting col
            for(int i = endingRow; count < totalElements && i >= startingRow; i--){
                ans.push_back(matrix[i][startingCol]);
                count++;
            }
            startingCol++;
        }
        
        return ans;

    }
};
