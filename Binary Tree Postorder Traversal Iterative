/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    // To understand the dry run refer take U forward YT channel .
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> ans;
        stack<TreeNode *> st;
        TreeNode * curr = root;

        while(curr != NULL || !st.empty()){
            // Matlab stack ke andar sirf wahi nodes rahenge jiska left part check ho chuka hai .
            if(curr != NULL){
                st.push(curr);
                curr = curr -> left;
            }
            else{
                // agar stack ka top ka right null nhi hai iska matlab uski top right wale node pe again LRN wala rule lag jayega isliye phir curr = temp kardo .
                TreeNode * temp = st.top()->right;
                if(temp == NULL){
                    // agar null ho gaya matlab top node ka left and right ho chuka hai to print kardo usko
                    temp = st.top();
                    st.pop();
                    ans.push_back(temp->val);

                    while(!st.empty() && temp == st.top()->right){
                        temp = st.top();
                        st.pop();
                        ans.push_back(temp->val);
                    }

                }
                else{
                    curr = temp;
                }
            }
        }

        return ans;
    }
};
