

//User function Template for C++
/*
Structure of the node of the binary tree is as
struct Node
{
	int data;
	struct Node *left, *right;
};
*/
// your task is to complete this function
// Approach by OM .
Node * solve(Node * root , int & k , int node){
    if(root == NULL){
        return NULL;
    }    
    else{
        if(root->data == node){
            return root;
        }
        
        Node * leftAns = solve(root->left , k , node);
        Node * rightAns = solve(root->right,k,node);
        
        if(leftAns != NULL && rightAns == NULL){
            k--;
            if(k == 0){
                k = INT_MAX; // to lock our answer so that kabhi bhi again k = 0 na ho and hamara answer successfully return ho jaye
                return root;
            }
            return leftAns;
        }
        else if(leftAns == NULL && rightAns != NULL){
            k--;
            if(k == 0){
                k = INT_MAX;
                return root;
            }
            return rightAns;
        }
        else{
            return NULL;
        }
    }
}

int kthAncestor(Node *root, int k, int node){
    
    Node * temp =  solve(root,k,node);
    
    
    // eak aaisa bhi case hoga jisme root->data hi node ke barabar hoga aur apne ko pata hai ki k 1 ya 1 se to jyada hi hoga matlab hume minimum eak level to uper jaana hi padega but agar root node hi match kar raha ho to uske uper to hum jaa nhi sakte so in that case we have to return -1 .
    if(temp == NULL || temp -> data == node){
        return -1;
    }
    else{
        return temp -> data;
    }
    
}
