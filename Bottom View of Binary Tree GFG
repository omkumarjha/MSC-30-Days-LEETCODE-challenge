class Solution {
  public:
    vector <int> bottomView(Node *root) {
        
        map<int,vector<int>> nodes;
        queue<pair<Node * , int >> q;
        q.push(make_pair(root,0));
        vector<int> ans;
        
        while(!q.empty()){
            pair<Node * ,int> temp = q.front();
            q.pop();
            
            Node * frontNode = temp.first;
            int hd = temp.second;
            
            nodes[hd].push_back(frontNode->data);
            
            if(frontNode->left){
                q.push(make_pair(frontNode->left,hd-1));
            }
            if(frontNode->right){
                q.push(make_pair(frontNode->right,hd+1));
            }
        }
        
        // isme hum last element har vector ke mai se utha rahe hai to get the bottom view of binary tree.
        for(auto i : nodes){
            ans.push_back(i.second.back());
        }
        
        return ans;
        
        
    }
};
