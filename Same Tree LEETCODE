/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        // Base Case
        if(p == NULL && q == NULL){
            return true;
        }
        // below code bas yeh check kar raha hai ki kya dono trees ke corresponding nodes structorly same hai ya nhi .
        if((p == NULL && q != NULL) || (p != NULL && q == NULL)){
            return false;
        }

        // yaha pe aa gaye means dono trees ke root node non null hai to abb recursion ko bolenge ki left and right tree ko check karo ki woh identical hai ya nhi.
        int left = isSameTree(p->left,q->left);
        int right = isSameTree(p->right,q->right);

        int sameValue = p->val == q->val;

        if(left && right && sameValue){
            return true;
        }
        return false;

    }
};
